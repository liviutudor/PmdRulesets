<?xml version="1.0"?>

<ruleset name="Monet ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>
        The rulesets we want to use in pmd for Monet. For a detailed description of pmd rulesets: http://pmd.sourceforge.net/rules/index.html
    </description>

    <!-- BASIC RULES -->
    <rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/JumbledIncrementer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/MisplacedNullCheck">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
        <priority>1</priority>
    </rule>

    <!-- CODE SIZE RULES -->
    <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/TooManyFields">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/TooManyMethods">
        <priority>3</priority>
    </rule>

    <!-- CONTROVERSIAL RULES -->
    <rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/NullAssignment">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/UseConcurrentHashMap">
        <priority>3</priority>
    </rule>

    <!-- COUPLING RULES -->
    <rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/coupling.xml/ExcessiveImports">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/coupling.xml/LooseCoupling">
        <priority>1</priority>
    </rule>

    <!-- DESIGN RULES -->
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidReassigningParameters">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/BadComparison">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CloseResource">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ConfusingTernary">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/EqualsNull">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/IdempotentOperations">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ImmutableField">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/MissingBreakInSwitch">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonStaticInitializer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/OptimizableToArrayCall">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyConditional">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SingularField">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SwitchDensity">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify">
        <priority>5</priority>
    </rule>

    <!-- EMPTY RULES -->
    <rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyTryBlock">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyWhileStmt">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyIfStmt">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyInitializer">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptySwitchStatements">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock">
        <priority>1</priority>
    </rule>

    <!-- FINALIZER RULES -->
    <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeShouldBeProtected">
        <priority>1</priority>
    </rule>

    <!-- IMPORTS RULES -->
    <rule ref="rulesets/java/imports.xml/DuplicateImports">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/DontImportJavaLang">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/ImportFromSamePackage">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringToString">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/UnusedImports">
        <priority>2</priority>
    </rule>

    <!-- MIGRATION RULES -->
    <rule ref="rulesets/java/migrating.xml/ByteInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/IntegerInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/LongInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ShortInstantiation">
        <priority>5</priority>
    </rule>

    <!-- NAMING RULES -->
    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/ShortMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
        <priority>1</priority>
    </rule>

    <!-- OPTIMIZATION RULES -->
    <rule ref="rulesets/java/optimizations.xml/AddEmptyString">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/AvoidInstantiatingObjectsInLoops">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
        <priority>1</priority>
    </rule>

    <!-- SECURITY RULES -->
    <rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/sunsecure.xml/MethodReturnsInternalArray">
        <priority>4</priority>
    </rule>

    <!-- STRING RULES -->
    <rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringToString">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseIndexOfChar">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UselessStringValueOf">
        <priority>5</priority>
    </rule>

    <!-- UNNECESSARY RULES -->
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable">
        <priority>1</priority>
    </rule>

    <!-- UNUSED CODE RULES -->
    <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
        <priority>4</priority>
    </rule>
</ruleset>
